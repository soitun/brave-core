diff --git a/third_party/blink/renderer/modules/encryptedmedia/navigator_request_media_key_system_access.cc b/third_party/blink/renderer/modules/encryptedmedia/navigator_request_media_key_system_access.cc
index 9f9702555d52ca094fcb982371e3b74a4c9bc3e5..a56234ddb08c9bde9fb7edb1463ec65fc75f5b3a 100644
--- a/third_party/blink/renderer/modules/encryptedmedia/navigator_request_media_key_system_access.cc
+++ b/third_party/blink/renderer/modules/encryptedmedia/navigator_request_media_key_system_access.cc
@@ -7,7 +7,9 @@
 #include <algorithm>
 
 #include "base/memory/ptr_util.h"
+#include "third_party/blink/public/common/associated_interfaces/associated_interface_provider.h"
 #include "third_party/blink/public/mojom/feature_policy/feature_policy.mojom-blink.h"
+#include "third_party/blink/public/platform/brave_drm.mojom-blink.h"
 #include "third_party/blink/public/platform/web_encrypted_media_client.h"
 #include "third_party/blink/public/platform/web_encrypted_media_request.h"
 #include "third_party/blink/public/platform/web_media_key_system_configuration.h"
@@ -20,6 +22,8 @@
 #include "third_party/blink/renderer/core/execution_context/execution_context.h"
 #include "third_party/blink/renderer/core/frame/deprecation.h"
 #include "third_party/blink/renderer/core/frame/local_frame.h"
+#include "third_party/blink/renderer/core/frame/local_frame_client.h"
+#include "third_party/blink/renderer/core/frame/web_local_frame_impl.h"
 #include "third_party/blink/renderer/core/inspector/console_message.h"
 #include "third_party/blink/renderer/modules/encryptedmedia/encrypted_media_utils.h"
 #include "third_party/blink/renderer/modules/encryptedmedia/media_key_session.h"
@@ -368,6 +372,18 @@ ScriptPromise NavigatorRequestMediaKeySystemAccess::requestMediaKeySystemAccess(
   media_client->RequestMediaKeySystemAccess(
       WebEncryptedMediaRequest(initializer));
 
+  // Notify Brave about the widevine availability request.
+  if (initializer->KeySystem() == "com.widevine.alpha") {
+    LocalFrame* frame = document->GetFrame();
+    if (frame->Client()->GetRemoteNavigationAssociatedInterfaces()) {
+      mojom::blink::BraveDRMAssociatedPtr brave_drm_binding;
+      frame->Client()->GetRemoteNavigationAssociatedInterfaces()->GetInterface(
+          &brave_drm_binding);
+      DCHECK(brave_drm_binding.is_bound());
+      brave_drm_binding->OnWidevineKeySystemAccessRequest();
+    }
+  }
+
   // 7. Return promise.
   return promise;
 }
